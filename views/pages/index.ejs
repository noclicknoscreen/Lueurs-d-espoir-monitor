<!-- views/pages/index.ejs -->

<!DOCTYPE html>
<html lang="fr">
<head>
    <% include ../partials/head %>
</head>
<body class="container">

    <header>
        <% include ../partials/header %>
    </header>

    <div class="container-fluid">
        <div class="row">
            <div class="col-xs-6 col-sm-4 col-md-4">
                <div><input type="checkbox" id="monitor_1" name="monitor_1" class="chk_monitor"></div>
                <img src="images/pupitre.png" class="pupitre" id="pupitre1" />
                <div type="button" class="btn btn-default btn-lg"><span id="images_count_1">0</span></div>
            </div>
            <div class="col-xs-6 col-sm-4 col-md-4">
                <div><input type="checkbox" id="monitor_2" name="monitor_2" class="chk_monitor"></div>
                <img src="images/pupitre.png" class="pupitre" id="pupitre2" />
                <div type="button" class="btn btn-default btn-lg"><span id="images_count_2">0</span></div>
            </div>
            <div class="col-xs-6 col-sm-4 col-md-4">
                <div><input type="checkbox" id="monitor_3" name="monitor_3" class="chk_monitor"></div>
                <img src="images/pupitre.png" class="pupitre" id="pupitre3" />
                <div type="button" class="btn btn-default btn-lg"><span id="images_count_3">0</span></div>
            </div>
        </div>
        <div class="row">
            <!-- pupitre 1 -->
            <div class="col-xs-6 col-sm-4 col-md-4">
                <table class="table table-striped">
                    <tr class="success" id="pupitre_1"><th>Pupitre 1</th>
                        <td>
                            <button type="button" id="cleanup_1" class="commande btn btn-warning btn-xs" title="Effacer les images pour faire de la place"><span class="glyphicon glyphicon-fire"></span></button>
                            <button type="button" id="reboot_1" class="commande btn btn-primary btn-xs" title="re-démarrer le système"><span class="glyphicon glyphicon-repeat"></span></button>
                            <button type="button" id="halt_1" class="commande btn btn-danger btn-xs" title="Arrêter le système"><span class="glyphicon glyphicon-off"></span></button>
                        </td>
                    </tr>
                    <tr class="danger">
                        <td colspan="2" id="error_1"></td> 
                    </tr>
                    <tr>
                        <th>Espace disponible</th>
                        <td>
                        	<div class="progress">
							  <div class="progress-bar progress-bar-info progress-bar-striped" role="progressbar" id="used_space_1" aria-valuenow="20" aria-valuemin="0" aria-valuemax="100" style="width: 0%">
							    <span id="used_space_text_1" class="sr-only"></span>
							  </div>
							</div>
                        </td>
                    </tr>
                    <tr>
                        <th>service <%= app_title %></th><td id="lues_service_1"></td>
                    </tr>
                    <tr>
                        <th>service DHCP</th><td id="dhcp_service_1"></td>
                    </tr>
                </table>
            </div>

            <!-- pupitre 2 -->
            <div class="col-xs-6 col-sm-4 col-md-4">
                <table class="table table-striped">
                    <tr class="success" id="pupitre_2"><th>Pupitre 2</th>
                        <td>
                            <button type="button" id="cleanup_2" class="commande btn btn-warning btn-xs" title="Effacer les images pour faire de la place"><span class="glyphicon glyphicon-fire"></span></button>
                            <button type="button" id="reboot_2" class="commande btn btn-primary btn-xs" title="re-démarrer le système"><span class="glyphicon glyphicon-repeat"></span></button>
                            <button type="button" id="halt_2" class="commande btn btn-danger btn-xs" title="Arrêter le système"><span class="glyphicon glyphicon-off"></span></button>
                        </td>
                    </tr>
                    <tr class="danger">
                        <td colspan="2" id="error_2"></td> 
                    </tr>
                    <tr>
                        <th>Espace disponible</th>
                        <td>
                        	<div class="progress">
							  <div class="progress-bar progress-bar-info progress-bar-striped" role="progressbar" id="used_space_2" aria-valuenow="20" aria-valuemin="0" aria-valuemax="100" style="width: 0%">
							    <span id="used_space_text_2" class="sr-only"></span>
							  </div>
							</div>
                        </td>
                    </tr>
                    <tr>
                        <th>service <%= app_title %></th><td id="lues_service_2"></td>
                    </tr>
                </table>
            </div>

            <!-- pupitre 3 -->
            <div class="col-xs-6 col-sm-4 col-md-4">
                <table class="table table-striped">
                    <tr class="success" id="pupitre_3"><th>Pupitre 3</th>
                        <td>
                            <button type="button" id="cleanup_3" class="commande btn btn-warning btn-xs" title="Effacer les images pour faire de la place"><span class="glyphicon glyphicon-fire"></span></button>
                            <button type="button" id="reboot_3" class="commande btn btn-primary btn-xs" title="re-démarrer le système"><span class="glyphicon glyphicon-repeat"></span></button>
                            <button type="button" id="halt_3" class="commande btn btn-danger btn-xs" title="Arrêter le système"><span class="glyphicon glyphicon-off"></span></button>
                        </td>
                    </tr>
                    <tr class="danger">
                        <td colspan="2" id="error_3"></td> 
                    </tr>
                    <tr>
                        <th>Espace disponible</th>
                        <td>
                        	<div class="progress">
							  <div class="progress-bar progress-bar-info progress-bar-striped" role="progressbar" id="used_space_3" aria-valuenow="20" aria-valuemin="0" aria-valuemax="100" style="width: 0%">
							    <span id="used_space_text_3" class="sr-only"></span>
							  </div>
							</div>
                        </td>
                    </tr>
                    <tr>
                        <th>service <%= app_title %></th><td id="lues_service_3"></td>
                    </tr>
                </table>
            </div>

        </div>
    </div>

	<button class="btn btn-xs btn-primary" type="button"> Messages <span class="badge" id='nbmes'></span></button>
	<button class="btn btn-xs btn-primary" type="button"> Check <span class="badge" id='nbreq'></span></button>

    <footer>
        <% include ../partials/footer %>
    </footer>
    <script type="text/javascript">
        $(document).ready( function() {
        	// Définition des éléments monitorés
            var DEVICE_LIST = {
                                rasp1 : { host: "192.168.1.90", port: '9000', path: '/monitor' }, 
                                rasp2 : { host: "192.168.1.12", port: '9000', path: '/monitor' }, 
                                rasp3 : { host: "192.168.1.13", port: '9000', path: '/monitor' }, 
                                rasp4 : { host: "192.168.1.14", port: '9000', path: '/monitor' }
                            };
            var LABEL_OK = "<span class='glyphicon glyphicon-thumbs-up'></span>",
                CSS_OK = "success",
                LABEL_KO = "<span class='glyphicon glyphicon-thumbs-down'></span>",
                CSS_KO = "danger";

            var MON = {1: true, 2: true, 3: true};

            var nbRequestTotal = 0;

            // ----------------------------------------------------------------------
            // Initializing switches
            // ----------------------------------------------------------------------
            for (i=0;i<=3;i++) { 
            	var sw = $("#monitor_" + i);
            	sw.bootstrapSwitch(); 
            	sw.bootstrapSwitch.defaults.size = 'mini';
				sw.bootstrapSwitch.defaults.onColor = 'success';
				sw.bootstrapSwitch.defaults.offColor = 'danger';
            }


			$('.chk_monitor').on('switchChange.bootstrapSwitch', function(event, state) {
			  idx = $(this).attr("id").replace(/[-#A-z]/g, "");
			  MON[idx] = state;
			  if (MON[idx]) {
			  	monitor("rasp" + idx, display_data);
			  }
			});

            // ----------------------------------------------------------------------
 			// sleep time expects milliseconds
            // ----------------------------------------------------------------------
			function sleep (time) {
			  return new Promise((resolve) => setTimeout(resolve, time));
			}

            // ----------------------------------------------------------------------
            // Moniroring ajax function
            // ----------------------------------------------------------------------
            function monitor(device, display_callback) {
                var idx = device.replace(/[-#A-z]/g, "");
                $("#error_" + idx).hide();
                $("#pupitre_" + idx).removeClass("success").removeClass("danger").addClass("warning");

                options = DEVICE_LIST[device];
                var url = 'http://' + options.host + ':' + options.port + options.path;
                console.log(' calling rasp api @' + device + ": url=" + url);
                // Appel ajax du device monitoré
                nbRequestTotal++;
                $.ajax({
                    url: url,
                    type: 'GET',
                    timeout: 30000,
                    success : function(response){
                        if (response != "" && response != undefined) {
                            if (response.stderr != "") {
                                console.log("error : " + response.stderr);
                            } else {
                                display_callback(idx, response);
                            }
                        } else { // No response
                            console.log("La réponse JSON est vide...");
                            display_error(idx, "Server is responding, but no response was sent.");
                        }
                    },
                    error : function(response){
                   		display_error(idx, "Monitoring service may be down !\n Status is " + response.status);
                    },
                    complete : function(q, status){
                    	var nextRequestIn = 10000;
                    	if ( status == 'notmodified' ) { // Nothing new, waiting more
                    		nextRequestIn = 40000;
                    	}
                    	if (status == 'abort') {
                    		display_error(idx, "User cancelled monitoring request.");
                    		nextRequestIn = 0; // No more request until the pb has been solved.
                    	}
                    	if (status == 'parsererror' || status == 'nocontent' || status == 'error') {
                    		display_error(idx, "Something went wrong on rasp" + idx + " response...");
                    	}
                    	if (status == 'timeout') {
                    		display_error(idx, "Rasp" + idx + " is unreachable. ");
                    		nextRequestIn = 40000;
                    	}
                    	// Attendre avant de lancer le prochain monitoring
                    	if (nextRequestIn > 0 && MON[idx]) {
	                    	sleep(nextRequestIn).then(() => {
							    monitor("rasp" + idx, display_data);
							});
	                    }
	                    display_stats();
					}
                });
            }

            // ----------------------------------------------------------------------
            // Affichage de stats
            // ----------------------------------------------------------------------
            function display_stats() {
            	var ndGaletsTotal = 0;
            	for (i=1; i <=3; i++){ 
            		ndGaletsTotal += parseInt($("#images_count_" + i).text()); 
            	}
            	$("#nbmes").text(ndGaletsTotal);
            	$("#nbreq").text(nbRequestTotal);
            }

            // ----------------------------------------------------------------------
            // Callback d'affichage des erreurs
            // ----------------------------------------------------------------------
            function display_error(idx, err) {
                $("#error_" + idx).text(err).show();
                $("#pupitre_" + idx).removeClass("success").removeClass("warning").addClass("danger");                          	 
            }

            // ----------------------------------------------------------------------
            // Callback de mise en page et affichage des données.
            // ----------------------------------------------------------------------
            var display_data = function(idx, response) {

                $("#pupitre_" + idx).removeClass("warning").removeClass("danger").addClass("success")
                $("#images_count_" + idx).text(response.data.images_count);
                // $("#used_space_" + idx).text(response.data.used_space + "Mo");
                $("#used_space_" + idx).attr("style", "width:" + response.data.used_space + ";");
                $("#used_space_text_" + idx).text(response.data.used_space);

                var css_class = CSS_KO, label = LABEL_KO;
                if (response.data.lues_service == "1") { 
                    css_class = CSS_OK; 
                    label = LABEL_OK;
                }
                $("#lues_service_" + idx).html('<span class="label label-' + css_class + '">' +  label + '</span>');

                if ($("#dhcp_service_"+idx)) {
                    css_class = CSS_KO;
                    label = LABEL_KO;
                    if (response.data.dhcp_service == "1") { 
                        css_class = CSS_OK; 
                        label = LABEL_OK;
                    }
                    $("#dhcp_service_" + idx).html('<span class="label label-' + css_class + '">' +  label + '</span>');
                }

            }

            // ----------------------------------------------------------------------
            // Fonction ajax d'envoie de commandes aux pupitres
            // ----------------------------------------------------------------------            
            function send_command(idx, cmd) {
                options = DEVICE_LIST['rasp' + idx];
                var url = 'http://' + options.host + ':' + options.port + '/' + cmd;
                console.log(' Command ' + cmd + ' sent to  #rasp' + idx + ": url=" + url);
                // Stop monitoring Rasp if reboot or halt
                if (cmd == "reboot" || cmd == "halt") {
                	$("#monitor_" + idx).bootstrapSwitch('state', false, false);
                	MON[idx] = false;
                }
                // Appel ajax du device commandé
                $.ajax({
                    url: url,
                    type: 'GET',
                    success : function(response){
                        console.log("commande '"+cmd+"' lancée...");
                    },
                    error : function(response){

                    }
                });
            }

            // ----------------------------------------------------------------------
            // Bouton d'envoie d'une commande
            // ----------------------------------------------------------------------
            $(".commande").click(function(){
                var t = $(this).attr("id").split("_");
                send_command(t[1], t[0]);
            });            

            // Demarrage du monitoring
            // monitor("rasp1", display_data);
            // monitor("rasp2", display_data);
            // monitor("rasp3", display_data);

         });
 

    </script>

</body>
</html>